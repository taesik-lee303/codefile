library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity counter2bit_fsm is
    port(
        clk   : in  std_logic;
        reset : in  std_logic;
        y     : out std_logic_vector(1 downto 0)
    );
end counter2bit_fsm;

architecture rtl of counter2bit_fsm is
    type state_type is (S0, S1, S2, S3);
    signal state, next_state : state_type;
begin
    -- 상태 전이
    process(clk, reset)
    begin
        if reset = '1' then
            state <= S0;
        elsif rising_edge(clk) then
            state <= next_state;
        end if;
    end process;

    -- 다음 상태 및 출력 결정
    process(state)
    begin
        case state is
            when S0 =>
                next_state <= S1;
                y <= "00";
            when S1 =>
                next_state <= S2;
                y <= "01";
            when S2 =>
                next_state <= S3;
                y <= "10";
            when S3 =>
                next_state <= S0;
                y <= "11";
        end case;
    end process;
end rtl;
